<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classpepr3d_1_1_model_view">
<title>pepr3d::ModelView Class Reference</title>
<indexterm><primary>pepr3d::ModelView</primary></indexterm>
<para>

<para>The main part of the user interface, shows the geometry to the user. </para>
 
</para>
<para>
<computeroutput>#include &lt;ModelView.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structpepr3d_1_1_model_view_1_1_attributes">Attributes</link></para>

<para>Custom OpenGL attributes. </para>
</listitem>
            <listitem><para>struct <link linkend="_structpepr3d_1_1_model_view_1_1_mesh_data_override">MeshDataOverride</link></para>

<para>Override currently displayed mesh data, making it possibly to change displayed mesh without chaning the geometry itself. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a599453dcbeead48f23193e0305f24e75"/><emphasis role="strong">ModelView</emphasis> (<link linkend="_classpepr3d_1_1_main_application">MainApplication</link> &amp;app)</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a9f5861e62821a38aac0de71d98019037"/>void <emphasis role="strong">resetPreview</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a76ad73738050d3aabb681b53e5ea8398"/>void <link linkend="_classpepr3d_1_1_model_view_1a76ad73738050d3aabb681b53e5ea8398">setup</link> ()</para>

<para>Setups the camera and shaders. Call only once! </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ab25e5abfcab1d8869e2ef78b44c98721"/>void <link linkend="_classpepr3d_1_1_model_view_1ab25e5abfcab1d8869e2ef78b44c98721">resize</link> ()</para>

<para>Called when the <link linkend="_classpepr3d_1_1_model_view">ModelView</link> should recalculate its size. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a3336add9f3f59fb474713d4552590a5c"/>void <link linkend="_classpepr3d_1_1_model_view_1a3336add9f3f59fb474713d4552590a5c">draw</link> ()</para>

<para>Draws the <link linkend="_classpepr3d_1_1_model_view">ModelView</link>, both ImGui and the <link linkend="_classpepr3d_1_1_geometry">Geometry</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ab428e44311e1ada48f4224f1cfd32915"/>void <link linkend="_classpepr3d_1_1_model_view_1ab428e44311e1ada48f4224f1cfd32915">drawGeometry</link> ()</para>

<para>Draws the <link linkend="_classpepr3d_1_1_geometry">Geometry</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1aa8dcae17a2801bbc3f6f26d919f12224"/>void <link linkend="_classpepr3d_1_1_model_view_1aa8dcae17a2801bbc3f6f26d919f12224">onMouseDown</link> (ci::app::MouseEvent event)</para>

<para>On mouse-down event over the <link linkend="_classpepr3d_1_1_model_view">ModelView</link> area. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a661a9c2b434be28bee4b2f30052031f2"/>void <link linkend="_classpepr3d_1_1_model_view_1a661a9c2b434be28bee4b2f30052031f2">onMouseDrag</link> (ci::app::MouseEvent event)</para>

<para>On mouse-drag event over the <link linkend="_classpepr3d_1_1_model_view">ModelView</link> area. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a872e02f519f6737a69b427271f6e6c96"/>void <link linkend="_classpepr3d_1_1_model_view_1a872e02f519f6737a69b427271f6e6c96">onMouseUp</link> (ci::app::MouseEvent event)</para>

<para>On mouse-up event over the <link linkend="_classpepr3d_1_1_model_view">ModelView</link> area. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a90934c651648861138d6d754be15c140"/>void <link linkend="_classpepr3d_1_1_model_view_1a90934c651648861138d6d754be15c140">onMouseWheel</link> (ci::app::MouseEvent event)</para>

<para>On mouse-wheel event over the <link linkend="_classpepr3d_1_1_model_view">ModelView</link> area. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a7223e1c00bbf6401b11b55d49bed71c5"/>void <link linkend="_classpepr3d_1_1_model_view_1a7223e1c00bbf6401b11b55d49bed71c5">onMouseMove</link> (ci::app::MouseEvent event)</para>

<para>On mouse-move event over the <link linkend="_classpepr3d_1_1_model_view">ModelView</link> area. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1add99723c6e0ac1041b29b9a54902b157"/>ci::Ray <link linkend="_classpepr3d_1_1_model_view_1add99723c6e0ac1041b29b9a54902b157">getRayFromWindowCoordinates</link> (glm::ivec2 windowCoords) const</para>

<para>Returns a 3D ray in the <link linkend="_classpepr3d_1_1_geometry">Geometry</link> scene computed from window coordinates. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ab31d990c6c32a93af35258ce2e512db2"/>void <link linkend="_classpepr3d_1_1_model_view_1ab31d990c6c32a93af35258ce2e512db2">drawTriangleHighlight</link> (const <link linkend="_structpepr3d_1_1_detailed_triangle_id">DetailedTriangleId</link> triangleId)</para>

<para>Draws a highlight (3 lines with a contrasting color) of a specified <link linkend="_structpepr3d_1_1_detailed_triangle_id">DetailedTriangleId</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a82f24b5d17a8352e76a69d87f4359d39"/>void <link linkend="_classpepr3d_1_1_model_view_1a82f24b5d17a8352e76a69d87f4359d39">drawTriangleHighlight</link> (const size_t triangleIdx)</para>

<para>Draws a highlight (3 lines with a contrasting color) of a specified triangle ID. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a55cdb6c309001e315259b9c2151ed571"/>void <link linkend="_classpepr3d_1_1_model_view_1a55cdb6c309001e315259b9c2151ed571">drawLine</link> (const glm::vec3 &amp;from, const glm::vec3 &amp;to, const ci::Color &amp;color=ci::Color::white(), float width=1.0f, bool depthTest=false)</para>

<para>Draws a 3D line. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a338d7d487eaf95ca572a0ad63508d42f"/>void <link linkend="_classpepr3d_1_1_model_view_1a338d7d487eaf95ca572a0ad63508d42f">drawCaption</link> (const std::string &amp;caption, const std::string &amp;errorCaption)</para>

<para>Draws a text label (caption) to the top left corner. <computeroutput>caption</computeroutput> is black, <computeroutput>errorCaption</computeroutput> is red and below <computeroutput>caption</computeroutput> </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1af9463d814c0df630235f7f7ac212eb54"/>bool <link linkend="_classpepr3d_1_1_model_view_1af9463d814c0df630235f7f7ac212eb54">isWireframeEnabled</link> () const</para>

<para>Returns true if wireframe of <link linkend="_classpepr3d_1_1_geometry">Geometry</link> is rendered. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ad6af1ab71ae31eb1a1e9290a1e5e45e3"/>void <link linkend="_classpepr3d_1_1_model_view_1ad6af1ab71ae31eb1a1e9290a1e5e45e3">enableWireframe</link> (bool enable=true)</para>

<para>Sets whether the wireframe of <link linkend="_classpepr3d_1_1_geometry">Geometry</link> should be rendered. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1af233e744e89acdc27258033377f9f14e"/>bool <link linkend="_classpepr3d_1_1_model_view_1af233e744e89acdc27258033377f9f14e">isGridEnabled</link> () const</para>

<para>Returns true if the grid below the <link linkend="_classpepr3d_1_1_geometry">Geometry</link> is rendered. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a43a0d49736a4f8b204b93594d964f308"/>void <link linkend="_classpepr3d_1_1_model_view_1a43a0d49736a4f8b204b93594d964f308">enableGrid</link> (bool enable=true)</para>

<para>Sets whether the grid below the <link linkend="_classpepr3d_1_1_geometry">Geometry</link> should be rendered. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a359a106369373c8e669649fac95e8cf4"/>float <link linkend="_classpepr3d_1_1_model_view_1a359a106369373c8e669649fac95e8cf4">getModelRoll</link> () const</para>

<para>Returns the current roll (rotation in the axis not controlled by <link linkend="_classpepr3d_1_1_camera_ui">CameraUi</link>) of the <link linkend="_classpepr3d_1_1_geometry">Geometry</link> object. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a91d166d8c1ff522ed0b37ba9e4a16501"/>void <link linkend="_classpepr3d_1_1_model_view_1a91d166d8c1ff522ed0b37ba9e4a16501">setModelRoll</link> (float roll)</para>

<para>Sets the current roll (rotation in the axis not controlled by <link linkend="_classpepr3d_1_1_camera_ui">CameraUi</link>) of the <link linkend="_classpepr3d_1_1_geometry">Geometry</link> object. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1aa02348736ac32b98423eb091c74ee0a2"/>glm::vec3 <link linkend="_classpepr3d_1_1_model_view_1aa02348736ac32b98423eb091c74ee0a2">getModelTranslate</link> () const</para>

<para>Gets the 3D translation of the <link linkend="_classpepr3d_1_1_geometry">Geometry</link> object. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a746d83e4e97ca487e3c78c4576b808d9"/>void <link linkend="_classpepr3d_1_1_model_view_1a746d83e4e97ca487e3c78c4576b808d9">setModelTranslate</link> (glm::vec3 translate)</para>

<para>Sets the 3D translation of the <link linkend="_classpepr3d_1_1_geometry">Geometry</link> object. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a2fc846e84bbc088d430d65d29dabb663"/>void <link linkend="_classpepr3d_1_1_model_view_1a2fc846e84bbc088d430d65d29dabb663">resetCamera</link> ()</para>

<para>Resets the camera to the default position. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1afc02d10fd1a5a0607a6a494475139993"/>void <link linkend="_classpepr3d_1_1_model_view_1afc02d10fd1a5a0607a6a494475139993">setFovZoomEnabled</link> (bool enabled)</para>

<para>Resets the camera and sets zoom to be field-of-view based (so on zoom, the camera position does not change, only FOV). </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a9d6337d9cc434235ed959b6efb22ca83"/>bool <link linkend="_classpepr3d_1_1_model_view_1a9d6337d9cc434235ed959b6efb22ca83">isFovZoomEnabled</link> () const</para>

<para>Returns true if the camera zoom is field-of-view based (so on zoom, the camera position does not change, only FOV). </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a4c1fd212021f24db3f703f039bcc3bf2"/>void <link linkend="_classpepr3d_1_1_model_view_1a4c1fd212021f24db3f703f039bcc3bf2">toggleMeshOverride</link> (bool newState)</para>

<para>Enables or disables vertex, normal, and index buffer override (all at once) </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a4546779d56626083622f7bdefcbd0bde"/>void <link linkend="_classpepr3d_1_1_model_view_1a4546779d56626083622f7bdefcbd0bde">forceBatchRefresh</link> ()</para>

<para>Batch data is going to be created again before rendering new frame. This will apply the overriden mesh. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a27cbaf51762a74685b86a58103b5a1e8"/>std::vector&lt; glm::vec4 &gt; &amp; <link linkend="_classpepr3d_1_1_model_view_1a27cbaf51762a74685b86a58103b5a1e8">getOverrideColorBuffer</link> ()</para>

<para>Returns a reference to the override color buffer, so you can read it or write to it. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a7dbddb9b59b9c869b9ee48bc0fcd03c2"/>bool <link linkend="_classpepr3d_1_1_model_view_1a7dbddb9b59b9c869b9ee48bc0fcd03c2">isMeshOverriden</link> () const</para>

<para>Returns true if the mesh data is overriden. (A mesh different from the geometry is being displayed) </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1aebca60d3e5b812601056f52918154370"/>std::vector&lt; glm::vec3 &gt; &amp; <link linkend="_classpepr3d_1_1_model_view_1aebca60d3e5b812601056f52918154370">getOverrideVertexBuffer</link> ()</para>

<para>Returns a reference to the override vertex buffer, so you can read it or write to it. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1abe2f0a133e9bb7aa5cb1fba102f4a1e1"/>std::vector&lt; glm::vec3 &gt; &amp; <link linkend="_classpepr3d_1_1_model_view_1abe2f0a133e9bb7aa5cb1fba102f4a1e1">getOverrideNormalBuffer</link> ()</para>

<para>Returns a reference to the override normal buffer, so you can read it or write to it. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a8cbad5b695e0e63ff5b77545bcc77286"/>std::vector&lt; uint32_t &gt; &amp; <link linkend="_classpepr3d_1_1_model_view_1a8cbad5b695e0e63ff5b77545bcc77286">getOverrideIndexBuffer</link> ()</para>

<para>Returns a reference to the override index buffer, so you can read it or write to it. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ae6cfd84f9d3dc6d3c98e8dcc905dba42"/>void <link linkend="_classpepr3d_1_1_model_view_1ae6cfd84f9d3dc6d3c98e8dcc905dba42">initOverrideFromBasicGeoemtry</link> ()</para>

<para>Initialize override buffer to data from non-detailed geometry. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1aa7a7110a5396aee8bb3261c8d191dc28"/>glm::vec2 <link linkend="_classpepr3d_1_1_model_view_1aa7a7110a5396aee8bb3261c8d191dc28">getPreviewMinMaxHeight</link> () const</para>

<para>Returns the minimum (first) and maximum (second) height that is rendered in the <link linkend="_classpepr3d_1_1_model_view">ModelView</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ac813369be27a029b6f2ecf32eae5c612"/>void <link linkend="_classpepr3d_1_1_model_view_1ac813369be27a029b6f2ecf32eae5c612">setPreviewMinMaxHeight</link> (glm::vec2 minMax)</para>

<para>Sets the minimum (first) and maximum (second) height that is rendered in the <link linkend="_classpepr3d_1_1_model_view">ModelView</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1af9f8bb7d19cca89bc4cdfc8f958c0eaa"/>float <link linkend="_classpepr3d_1_1_model_view_1af9f8bb7d19cca89bc4cdfc8f958c0eaa">getMaxSize</link> () const</para>

<para>Returns the maximum size (in the X, Y, Z axes) of the current <link linkend="_classpepr3d_1_1_geometry">Geometry</link> object. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a324a3111305b1a127e61e628b1a8e066"/>void <link linkend="_classpepr3d_1_1_model_view_1a324a3111305b1a127e61e628b1a8e066">onNewGeometryLoaded</link> ()</para>

<para>Called by MainAplication when new geometry is loaded. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a6ae61178850cad2d5ca2621ed474c12d"/>glm::mat4 <emphasis role="strong">getModelMatrix</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1abb14ac330c5a1b5618efa20624c07d42"/>const ci::CameraPersp &amp; <emphasis role="strong">getCamera</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1adbcd7fa73c38c88bda111dd1400e7c82"/>std::vector&lt; glm::vec3 &gt; <emphasis role="strong">previewTriangles</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ae3df7a703a9ea4bec3e28ba409326bda"/>std::vector&lt; uint32_t &gt; <emphasis role="strong">previewIndices</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a7acedc0788dd9115a85bb84ed2e27402"/>std::vector&lt; glm::vec4 &gt; <emphasis role="strong">previewColors</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1afbba4767e833257eaac687cc5d5b1896"/>std::vector&lt; glm::vec3 &gt; <emphasis role="strong">previewNormals</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a13a0075d890659252e739cb212f5ce1a"/>void <link linkend="_classpepr3d_1_1_model_view_1a13a0075d890659252e739cb212f5ce1a">updateModelMatrix</link> ()</para>

<para>Recalculates the model matrix of the current <link linkend="_classpepr3d_1_1_geometry">Geometry</link> object. The model matrix ensures that the object&apos;s maximum displayed size is 1.0 and it is centered above the grid, touching it on the bottom. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1acd9a0fe559b6443aa3baeae23fd21809"/>void <link linkend="_classpepr3d_1_1_model_view_1acd9a0fe559b6443aa3baeae23fd21809">updateVboAndBatch</link> ()</para>

<para>Recalculates the OpenGL vertex buffer object and the Cinder batch. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a1ea0d3df781900d19374f7622b309e0f"/><link linkend="_classpepr3d_1_1_main_application">MainApplication</link> &amp; <emphasis role="strong">mApplication</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a6466c60a76a03d6717e39bdf5f3cdb61"/>ci::gl::VboMeshRef <emphasis role="strong">mVboMesh</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ae0b4cc550b89d678a9bb873797e0a5fd"/>ci::gl::BatchRef <emphasis role="strong">mBatch</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a25fcb8f18603b1eca917afddc22bd53d"/>std::pair&lt; glm::ivec2, glm::ivec2 &gt; <emphasis role="strong">mViewport</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a5ad014f86cfcd51a23e42b1f8d0b43ba"/>ci::CameraPersp <emphasis role="strong">mCamera</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a5fddad8a7098bb3b7a2ce8fe8c8fbbae"/><link linkend="_classpepr3d_1_1_camera_ui">pepr3d::CameraUi</link> <emphasis role="strong">mCameraUi</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a1118d31ff0cbcffd8849fe2618dd0b76"/>ci::gl::GlslProgRef <emphasis role="strong">mModelShader</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a2782075113978240a27c5dc96d6b5ced"/>bool <emphasis role="strong">mIsWireframeEnabled</emphasis> = false</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1af775fd52d68eba85cf50d5ef814acbcc"/>bool <emphasis role="strong">mIsGridEnabled</emphasis> = true</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1aaad7b91e2a946b38bd930d108d07111e"/>float <emphasis role="strong">mGridOffset</emphasis> = 0.0f</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a9fd29e6f6da7b236ee720c831d2d761a"/>glm::mat4 <emphasis role="strong">mModelMatrix</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1ab76d51db2a07baaffd576603b68ce123"/>float <emphasis role="strong">mModelRoll</emphasis> = 0.0f</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a2435a4fd900c17ab27bbe82f58864614"/>glm::vec3 <emphasis role="strong">mModelTranslate</emphasis> = glm::vec3(0)</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1adf575a92a3398753c447f0f15e4ad79f"/>float <emphasis role="strong">mMaxSize</emphasis> = 1.f</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1af8a8ca2c09bf45ce02d87ae32e08c1cc"/>glm::vec2 <emphasis role="strong">mPreviewMinMaxHeight</emphasis> = glm::vec2(0.0f, 1.0f)</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_model_view_1a8ba7c53c4f4a93938bb3a4f46a9d3dea"/>struct <link linkend="_structpepr3d_1_1_model_view_1_1_mesh_data_override">pepr3d::ModelView::MeshDataOverride</link> <emphasis role="strong">mMeshOverride</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The main part of the user interface, shows the geometry to the user. </para>
<para>
The documentation for this class was generated from the following files:</para>
D:/Home/MFF/1-Mgr/projekt/pepr3d/src/ui/ModelView.hD:/Home/MFF/1-Mgr/projekt/pepr3d/src/ui/ModelView.cpp</section>
</section>
