<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classpepr3d_1_1_font_rasterizer">
<title>pepr3d::FontRasterizer Class Reference</title>
<indexterm><primary>pepr3d::FontRasterizer</primary></indexterm>
<para>

<para>Used for triangulating a font outline. </para>
 
</para>
<para>
<computeroutput>#include &lt;FontRasterizer.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structpepr3d_1_1_font_rasterizer_1_1_tri">Tri</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a7099a831f003a1e9f15e3d28918613b7"/><emphasis role="strong">FontRasterizer</emphasis> (const std::string fontFile)</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1acbb4bdd3f6183bebe44bc4bd38321b4d"/>std::string <emphasis role="strong">getCurrentFont</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a965167ef18771ff5b19f1bcfbb0403e0"/>bool <emphasis role="strong">isValid</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a5632080c9dd7163ca8b3635820083148"/>std::vector&lt; std::vector&lt; <link linkend="_structpepr3d_1_1_font_rasterizer_1_1_tri">FontRasterizer::Tri</link> &gt; &gt; <emphasis role="strong">rasterizeText</emphasis> (const std::string textString, const size_t fontHeight, const size_t bezierSteps)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>double <link linkend="_classpepr3d_1_1_font_rasterizer_1a478acb4e2249fe8f6d548e7c850196af">addOneCharacter</link> (const char ch, const size_t bezierSteps, double offset, std::vector&lt; <link linkend="_structpepr3d_1_1_font_rasterizer_1_1_tri">Tri</link> &gt; &amp;outTriangles)</para>

<para>The following code originated from <link xlink:href="https://github.com/codetiger/Font23D">https://github.com/codetiger/Font23D</link> and was modified by the Pepr team. </para>
</listitem>
            <listitem><para>void <link linkend="_classpepr3d_1_1_font_rasterizer_1add285bc72f4611f6f74811978b877d68">outlinePostprocess</link> (std::vector&lt; std::vector&lt; <link linkend="_structpepr3d_1_1_font_rasterizer_1_1_tri">Tri</link> &gt;&gt; &amp;trianglesPerLetter) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1ade535a9c18d7893a55d0520bee01b162"/>static std::vector&lt; p2t::Point * &gt; <link linkend="_classpepr3d_1_1_font_rasterizer_1ade535a9c18d7893a55d0520bee01b162">triangulateContour</link> (Vectoriser *vectoriser, int c, float offset)</para>

<para>The following code originated from <link xlink:href="https://github.com/codetiger/Font23D">https://github.com/codetiger/Font23D</link> and was modified by the Pepr team. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a2143778af8792270dc56c21d516f0a39"/>std::string <emphasis role="strong">mFontFile</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a86bb6289a6c838b3988fb38b86fab014"/>bool <emphasis role="strong">mFontLoaded</emphasis> = false</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a61aa06d9f214a6298fc13be6f6821f6b"/>FT_Library <emphasis role="strong">mLibrary</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a06267b2d5810dc38419f24792d922e79"/>FT_Face <emphasis role="strong">mFace</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a157983c8ac203ec44d551db0f5d33075"/>FT_UInt <emphasis role="strong">mPrevCharIndex</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a614fd5782aec36c0f5afd3c4f45b51ac"/>FT_UInt <emphasis role="strong">mCurCharIndex</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a1fc365e2226ad0555e7fc8e4fa25472d"/>FT_Pos <emphasis role="strong">mPrev_rsb_delta</emphasis> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Used for triangulating a font outline. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classpepr3d_1_1_font_rasterizer_1a478acb4e2249fe8f6d548e7c850196af"/>    <section>
    <title>addOneCharacter()</title>
<indexterm><primary>addOneCharacter</primary><secondary>pepr3d::FontRasterizer</secondary></indexterm>
<indexterm><primary>pepr3d::FontRasterizer</primary><secondary>addOneCharacter</secondary></indexterm>
<para><computeroutput>double pepr3d::FontRasterizer::addOneCharacter (const char ch, const size_t bezierSteps, double offset, std::vector&lt; <link linkend="_structpepr3d_1_1_font_rasterizer_1_1_tri">Tri</link> &gt; &amp; outTriangles)<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>The following code originated from <link xlink:href="https://github.com/codetiger/Font23D">https://github.com/codetiger/Font23D</link> and was modified by the Pepr team. </para>
</para>

<para>Uncomment the following part if you need the outline, not a triangulation Beware, the order of the outlines seems to be random - the first (0) is NOT always the outermost Depends on the font. </para>
    </section><anchor xml:id="_classpepr3d_1_1_font_rasterizer_1add285bc72f4611f6f74811978b877d68"/>    <section>
    <title>outlinePostprocess()</title>
<indexterm><primary>outlinePostprocess</primary><secondary>pepr3d::FontRasterizer</secondary></indexterm>
<indexterm><primary>pepr3d::FontRasterizer</primary><secondary>outlinePostprocess</secondary></indexterm>
<para><computeroutput>void pepr3d::FontRasterizer::outlinePostprocess (std::vector&lt; std::vector&lt; <link linkend="_structpepr3d_1_1_font_rasterizer_1_1_tri">Tri</link> &gt;&gt; &amp; trianglesPerLetter) const<computeroutput>[private]</computeroutput></computeroutput></para>
<para>Uncomment the following part if you need the outline, not a triangulation </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
D:/Home/MFF/1-Mgr/projekt/pepr3d/src/geometry/FontRasterizer.hD:/Home/MFF/1-Mgr/projekt/pepr3d/src/geometry/FontRasterizer.cpp</section>
</section>
