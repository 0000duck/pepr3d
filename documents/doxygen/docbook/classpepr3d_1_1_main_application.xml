<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classpepr3d_1_1_main_application">
<title>pepr3d::MainApplication Class Reference</title>
<indexterm><primary>pepr3d::MainApplication</primary></indexterm>
<para>

<para>The main Cinder-based application, represents a window, handles events, thread pool, active tools, geometry, etc. </para>
 
</para>
<para>
<computeroutput>#include &lt;MainApplication.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for pepr3d::MainApplication:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classpepr3d_1_1_main_application.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a99845ed56d376246abd66dd2ac04e25b"/>using <emphasis role="strong">ToolsVector</emphasis> = std::vector&lt; std::unique_ptr&lt; <link linkend="_classpepr3d_1_1_tool">Tool</link> &gt; &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a5b6116d8f876a0ffe82ac50a79699a80"/>void <link linkend="_classpepr3d_1_1_main_application_1a5b6116d8f876a0ffe82ac50a79699a80">setup</link> () override</para>

<para>Called by Cinder. Perform any application setup after the Renderer has been initialized. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1aaeaff9b43639879dc3f318c97ae28a78"/>void <link linkend="_classpepr3d_1_1_main_application_1aaeaff9b43639879dc3f318c97ae28a78">update</link> () override</para>

<para>Called by Cinder. Perform any once-per-loop computation. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1abc78d4bf492874de9bfd6f38fdc0a9d1"/>void <link linkend="_classpepr3d_1_1_main_application_1abc78d4bf492874de9bfd6f38fdc0a9d1">draw</link> () override</para>

<para>Called by Cinder. Perform any rendering once-per-loop or in response to OS-prompted requests for refreshes. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1aa65c16b49a329894f4c11e8ec170ff77"/>void <link linkend="_classpepr3d_1_1_main_application_1aa65c16b49a329894f4c11e8ec170ff77">resize</link> () override</para>

<para>Called by Cinder. Receive window resize events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a6f78d23316feefe9fa47d175945a9539"/>void <link linkend="_classpepr3d_1_1_main_application_1a6f78d23316feefe9fa47d175945a9539">mouseDown</link> (MouseEvent event) override</para>

<para>Called by Cinder. Receive mouse-down events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a37906240fbe8298da4cee85823beb9d3"/>void <link linkend="_classpepr3d_1_1_main_application_1a37906240fbe8298da4cee85823beb9d3">mouseDrag</link> (MouseEvent event) override</para>

<para>Called by Cinder. Receive mouse-drag events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1acbb75130b69f0da2f12f87322e976fd5"/>void <link linkend="_classpepr3d_1_1_main_application_1acbb75130b69f0da2f12f87322e976fd5">mouseUp</link> (MouseEvent event) override</para>

<para>Called by Cinder. Receive mouse-up events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a80d67681ea10a5ed21bc8c5004f1ad94"/>void <link linkend="_classpepr3d_1_1_main_application_1a80d67681ea10a5ed21bc8c5004f1ad94">mouseWheel</link> (MouseEvent event) override</para>

<para>Called by Cinder. Receive mouse-wheel events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1afe0f99dcc618f5820a9f947bde3fd14b"/>void <link linkend="_classpepr3d_1_1_main_application_1afe0f99dcc618f5820a9f947bde3fd14b">mouseMove</link> (MouseEvent event) override</para>

<para>Called by Cinder. Receive mouse-move events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a5328b13b9f1d06c7897f503e32ddfcc7"/>void <link linkend="_classpepr3d_1_1_main_application_1a5328b13b9f1d06c7897f503e32ddfcc7">fileDrop</link> (FileDropEvent event) override</para>

<para>Called by Cinder. Receive file-drop events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1aba1caad067c409097504d7a4d2ce52ee"/>void <link linkend="_classpepr3d_1_1_main_application_1aba1caad067c409097504d7a4d2ce52ee">keyDown</link> (KeyEvent event) override</para>

<para>Called by Cinder. Receive key-down events. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a729e5a9d504e19d4d9ded03b36389e72"/><link linkend="_classpepr3d_1_1_toolbar">Toolbar</link> &amp; <link linkend="_classpepr3d_1_1_main_application_1a729e5a9d504e19d4d9ded03b36389e72">getToolbar</link> ()</para>

<para>Returns a reference to the <link linkend="_classpepr3d_1_1_toolbar">Toolbar</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a0cdfc3de57eb4d504a1c03ddd6089670"/><link linkend="_classpepr3d_1_1_side_pane">SidePane</link> &amp; <link linkend="_classpepr3d_1_1_main_application_1a0cdfc3de57eb4d504a1c03ddd6089670">getSidePane</link> ()</para>

<para>Returns a reference to the <link linkend="_classpepr3d_1_1_side_pane">SidePane</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ab1e84ebe5d446b18eb977b325a8b9afc"/><link linkend="_classpepr3d_1_1_model_view">ModelView</link> &amp; <link linkend="_classpepr3d_1_1_main_application_1ab1e84ebe5d446b18eb977b325a8b9afc">getModelView</link> ()</para>

<para>Returns a reference to the <link linkend="_classpepr3d_1_1_model_view">ModelView</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1abaccd25f162b70a1d56eef7dfa5f6d35"/>bool <link linkend="_classpepr3d_1_1_main_application_1abaccd25f162b70a1d56eef7dfa5f6d35">isDemoWindowShown</link> ()</para>

<para>Returns true if the ImGui demo window is shown. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ac5472dc8c46954026bd65c72ef3de3e9"/>void <link linkend="_classpepr3d_1_1_main_application_1ac5472dc8c46954026bd65c72ef3de3e9">showDemoWindow</link> (bool show=true)</para>

<para>Set if the ImGui demo window should be shown. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a91ce9fd9f93a11384734e98e72173609"/>void <link linkend="_classpepr3d_1_1_main_application_1a91ce9fd9f93a11384734e98e72173609">openFile</link> (const std::string &amp;path)</para>

<para>Tries to open a file in the specified path and use it as the new <link linkend="_classpepr3d_1_1_geometry">Geometry</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a0e7e06ee55cd65c2bdc30ec2742f50ab"/>ToolsVector::iterator <link linkend="_classpepr3d_1_1_main_application_1a0e7e06ee55cd65c2bdc30ec2742f50ab">getToolsBegin</link> ()</para>

<para>Get the begin iterator of the current vector of <link linkend="_classpepr3d_1_1_tool">Tool</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a71cb88d088358a0121a080f728126eef"/>ToolsVector::iterator <link linkend="_classpepr3d_1_1_main_application_1a71cb88d088358a0121a080f728126eef">getToolsEnd</link> ()</para>

<para>Get the end iterator of the current vector of <link linkend="_classpepr3d_1_1_tool">Tool</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a8d69a67e452592afc6e7e2f6b7e6b9a0"/>ToolsVector::iterator <link linkend="_classpepr3d_1_1_main_application_1a8d69a67e452592afc6e7e2f6b7e6b9a0">getCurrentToolIterator</link> ()</para>

<para>Get the iterator of the currently selected <link linkend="_classpepr3d_1_1_tool">Tool</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a69aa1c6492d7ec045dcbcdb25b8d9912"/><link linkend="_classpepr3d_1_1_tool">Tool</link> * <link linkend="_classpepr3d_1_1_main_application_1a69aa1c6492d7ec045dcbcdb25b8d9912">getCurrentTool</link> ()</para>

<para>Get a pointer of the currently selected <link linkend="_classpepr3d_1_1_tool">Tool</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ac5ea5ce0d25e8ff5c996eb33956ab9a8"/>void <link linkend="_classpepr3d_1_1_main_application_1ac5ea5ce0d25e8ff5c996eb33956ab9a8">setCurrentToolIterator</link> (ToolsVector::iterator tool)</para>

<para>Set the iterator of the <link linkend="_classpepr3d_1_1_tool">Tool</link> you want to be selected. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a429927346ea0766c39f0b713888f80fd"/>template&lt;typename Tool &gt; </para><para>void <link linkend="_classpepr3d_1_1_main_application_1a429927346ea0766c39f0b713888f80fd">setCurrentTool</link> ()</para>

<para>Set the <link linkend="_classpepr3d_1_1_tool">Tool</link> (in template) as selected. Usage: <link linkend="_classpepr3d_1_1_main_application_1a429927346ea0766c39f0b713888f80fd">setCurrentTool&lt;PaintBucket&gt;()</link> </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ae47b18590297b63e6e0e5ae01fc027d5"/><link linkend="_classpepr3d_1_1_geometry">Geometry</link> * <link linkend="_classpepr3d_1_1_main_application_1ae47b18590297b63e6e0e5ae01fc027d5">getCurrentGeometry</link> ()</para>

<para>Returns a pointer to the current <link linkend="_classpepr3d_1_1_geometry">Geometry</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a133b4db1b39af78dc68b5a9181eaabc7"/><link linkend="_classpepr3d_1_1_command_manager">CommandManager</link>&lt; <link linkend="_classpepr3d_1_1_geometry">Geometry</link> &gt; * <link linkend="_classpepr3d_1_1_main_application_1a133b4db1b39af78dc68b5a9181eaabc7">getCommandManager</link> ()</para>

<para>Returns a pointer to the current <link linkend="_classpepr3d_1_1_command_manager">CommandManager</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a7940de51f976d83f840e956be02481b3"/>void <link linkend="_classpepr3d_1_1_main_application_1a7940de51f976d83f840e956be02481b3">showImportDialog</link> (const std::vector&lt; std::string &gt; &amp;extensions)</para>

<para>Opens the file dialog for import. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a82b879fdae70b8d0093c55c29bac2e5b"/>void <link linkend="_classpepr3d_1_1_main_application_1a82b879fdae70b8d0093c55c29bac2e5b">drawTooltipOnHover</link> (const std::string &amp;label, const std::string &amp;shortcut=&quot;&quot;, const std::string &amp;description=&quot;&quot;, const std::string &amp;disabled=&quot;&quot;, glm::vec2 position=glm::vec2(-1.0f), glm::vec2 pivot=glm::vec2(0.0f))</para>

<para>Draws a tooltip if the previous ImGui item was hovered. Optionally you can set a custom position and pivot point, if they are not provided, the tooltip will hover above the item. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ae60f75eac8ad5d0ffda1541122c713a0"/><link linkend="_classpepr3d_1_1_font_storage">FontStorage</link> &amp; <link linkend="_classpepr3d_1_1_main_application_1ae60f75eac8ad5d0ffda1541122c713a0">getFontStorage</link> ()</para>

<para>Returns a reference to the <link linkend="_classpepr3d_1_1_font_storage">FontStorage</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a21f4278d6d389508667b7a6a7b984c8b"/>const <link linkend="_classpepr3d_1_1_hotkeys">Hotkeys</link> &amp; <link linkend="_classpepr3d_1_1_main_application_1a21f4278d6d389508667b7a6a7b984c8b">getHotkeys</link> () const</para>

<para>Returns a reference to the <link linkend="_classpepr3d_1_1_hotkeys">Hotkeys</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1adafee6ac798a97a338f1de8b5cece5d4"/>void <link linkend="_classpepr3d_1_1_main_application_1adafee6ac798a97a338f1de8b5cece5d4">pushDialog</link> (const <link linkend="_classpepr3d_1_1_dialog">pepr3d::Dialog</link> &amp;dialog)</para>

<para>Pushes a new dialog to the priority queue of the application. If it is a fatal error dialog, all other rendering is stopped (but only since the next frame). </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a3a21c18b808ee9cc2033f8a41ff64329"/>void <link linkend="_classpepr3d_1_1_main_application_1a3a21c18b808ee9cc2033f8a41ff64329">saveProject</link> ()</para>

<para>Saves the .p3d serialized file of the current <link linkend="_classpepr3d_1_1_geometry">Geometry</link> to the same file as was used previously. If it was not saved yet, behaves the same as saveProjectAs. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a96e83b00512d96b952d231e2db1a634b"/>void <link linkend="_classpepr3d_1_1_main_application_1a96e83b00512d96b952d231e2db1a634b">saveProjectAs</link> ()</para>

<para>Opens a file dialog to save the .p3d serialized file of the current <link linkend="_classpepr3d_1_1_geometry">Geometry</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ab805488ee0fd1ec3548e92667e6ad248"/>ci::fs::path <link linkend="_classpepr3d_1_1_main_application_1ab805488ee0fd1ec3548e92667e6ad248">getRequiredAssetPath</link> (const ci::fs::path &amp;relativePath)</para>

<para>Behaves same as Cinder&apos;s getAssetPath, but in this case, if the asset is not found, a fatal error <link linkend="_classpepr3d_1_1_dialog">Dialog</link> is shown to the user. The fatal error <link linkend="_classpepr3d_1_1_dialog">Dialog</link> also causes the application to terminate rendering. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1acfab9e02ede45fc96c2716370fdda96c"/>ci::DataSourceRef <link linkend="_classpepr3d_1_1_main_application_1acfab9e02ede45fc96c2716370fdda96c">loadRequiredAsset</link> (const ci::fs::path &amp;relativePath)</para>

<para>Behaves same as Cinder&apos;s loadAsset, but in this case, if the asset is not found, a fatal error <link linkend="_classpepr3d_1_1_dialog">Dialog</link> is shown to the user. The fatal error <link linkend="_classpepr3d_1_1_dialog">Dialog</link> also causes the application to terminate rendering. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a4dcd1d98fa39ff7769fff445f7e5563c"/>template&lt;typename OperationFunc , typename PostOperationFunc &gt; </para><para>void <link linkend="_classpepr3d_1_1_main_application_1a4dcd1d98fa39ff7769fff445f7e5563c">enqueueSlowOperation</link> (OperationFunc operation, PostOperationFunc postOperation, bool showIndicator=true)</para>

<para>Schedules <computeroutput>operation</computeroutput> to be executed in a separate thread in a thread pool. If <computeroutput>showIndicator</computeroutput> is true, displays a progress indicator, which disables user interaction with the application. After the <computeroutput>operation</computeroutput> is finished, <computeroutput>postOperation</computeroutput> is executed in the main thread of the application. Finally, the progress indicator is hidden. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1afd1be24404f0c0b26517970c77212603"/>std::string <link linkend="_classpepr3d_1_1_main_application_1afd1be24404f0c0b26517970c77212603">getGeometryFileName</link> () const</para>

<para>Returns the path to the current <link linkend="_classpepr3d_1_1_geometry">Geometry</link> file. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a2cdfe5b197e302f0097e62cb7ba7c47c"/>static void <link linkend="_classpepr3d_1_1_main_application_1a2cdfe5b197e302f0097e62cb7ba7c47c">prepareSettings</link> (<link linkend="_classpepr3d_1_1_settings">Settings</link> *settings)</para>

<para>Called by Cinder. Prepare settings before setting up the application. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a09c365abb40896d8d680b311b352c726"/>::ThreadPool &amp; <link linkend="_classpepr3d_1_1_main_application_1a09c365abb40896d8d680b311b352c726">getThreadPool</link> ()</para>

<para>Returns a single instance of the ThreadPool. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a33cbcb0bc0f82a9c5e999896790327da"/>const std::vector&lt; std::string &gt; <emphasis role="strong">supportedImportExtensions</emphasis> = {&quot;stl&quot;, &quot;obj&quot;, &quot;ply&quot;}</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a6dc274ba0f11ff91cef2cebb39dad823"/>const std::vector&lt; std::string &gt; <emphasis role="strong">supportedOpenExtensions</emphasis> = {&quot;p3d&quot;}</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ab109e61da72a727f217fa9e715642c42"/>void <link linkend="_classpepr3d_1_1_main_application_1ab109e61da72a727f217fa9e715642c42">setupLogging</link> ()</para>

<para>Setups Cinder logging (warnings and errors in Release) and <link linkend="_classpepr3d_1_1_fatal_logger">FatalLogger</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a2e368d949ee47ce6466d2abd992e9e9f"/>void <link linkend="_classpepr3d_1_1_main_application_1a2e368d949ee47ce6466d2abd992e9e9f">setupFonts</link> ()</para>

<para>Setups ImGui fonts and <link linkend="_classpepr3d_1_1_font_storage">FontStorage</link>. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ac2ab8320c6d5bc477b5b44a518e32dbd"/>void <link linkend="_classpepr3d_1_1_main_application_1ac2ab8320c6d5bc477b5b44a518e32dbd">setupIcon</link> ()</para>

<para>Setups a WinAPI icon of the main window (only on Windows). </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a3b26419f0dc484c466b4b65686cb09d5"/>void <link linkend="_classpepr3d_1_1_main_application_1a3b26419f0dc484c466b4b65686cb09d5">willResignActive</link> ()</para>

<para>Called when the main window loses focus. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a2692d734374d2a74c63b45f0856baf1a"/>void <link linkend="_classpepr3d_1_1_main_application_1a2692d734374d2a74c63b45f0856baf1a">didBecomeActive</link> ()</para>

<para>Called when the main window becomes focused. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a5a9f2357108cc7c32b640559723f5270"/>bool <link linkend="_classpepr3d_1_1_main_application_1a5a9f2357108cc7c32b640559723f5270">isWindowObscured</link> ()</para>

<para>Returns true if the main window is obscured by another window or windows (only on Windows). Window is obscured if one of the following is true: 1) if the window is minimized, and/or 2) if the top left corner, middle, and bottom right corner are obscured by a different window. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a8c723a7f716f24de66df40affcd63add"/>bool <link linkend="_classpepr3d_1_1_main_application_1a8c723a7f716f24de66df40affcd63add">showLoadingErrorDialog</link> ()</para>

<para>Detects if any error happened during the loading of new <link linkend="_classpepr3d_1_1_geometry">Geometry</link>. Returns true if no errors occured (or only a warning occured). </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a8792c0f1e1c151da1d7fa2b1ff05643d"/>void <link linkend="_classpepr3d_1_1_main_application_1a8792c0f1e1c151da1d7fa2b1ff05643d">loadHotkeysFromFile</link> (const std::string &amp;path)</para>

<para>Loads <link linkend="_classpepr3d_1_1_hotkeys">Hotkeys</link> from a file. </para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ab0fb0391cc13ce9fab835893246a945b"/>void <link linkend="_classpepr3d_1_1_main_application_1ab0fb0391cc13ce9fab835893246a945b">saveHotkeysToFile</link> (const std::string &amp;path)</para>

<para>Saves <link linkend="_classpepr3d_1_1_hotkeys">Hotkeys</link> to a file. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a288e20cefd96cbcf09587c7dc5fbdc87"/>bool <emphasis role="strong">mShouldSkipDraw</emphasis> = false</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a72965ea8c0eaa97ea8a932d2c6354fcf"/>bool <emphasis role="strong">mIsFocused</emphasis> = true</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ae0388ef1646751c20f605438233cdbc9"/>ci::gl::FboRef <emphasis role="strong">mFramebuffer</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a35e059c6c2cb5f40861410c8e54a7571"/><link linkend="_classpepr3d_1_1_hotkeys">Hotkeys</link> <emphasis role="strong">mHotkeys</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a25c9d28d19d85ba80d7507ba4e3bfebd"/>glm::vec2 <emphasis role="strong">mLastTooltipSize</emphasis> = glm::vec2(0.0f)</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a96589bd3e706609668b3dfe0f62f947e"/>peprimgui::PeprImGui <emphasis role="strong">mImGui</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1addc4686c64248597534a30ae3591e365"/><link linkend="_classpepr3d_1_1_font_storage">FontStorage</link> <emphasis role="strong">mFontStorage</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1aba3ae7115af28d3c393d9f7ca12fa0bb"/><link linkend="_classpepr3d_1_1_toolbar">Toolbar</link> <emphasis role="strong">mToolbar</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ab47bfd08d08aad45846767edea3791c8"/><link linkend="_classpepr3d_1_1_side_pane">SidePane</link> <emphasis role="strong">mSidePane</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ad6ade9e5898bd8e926e59c36af3aadf0"/><link linkend="_classpepr3d_1_1_model_view">ModelView</link> <emphasis role="strong">mModelView</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a584e07294abcf01b259bfa7b0e326965"/><link linkend="_classpepr3d_1_1_progress_indicator">ProgressIndicator</link> <emphasis role="strong">mProgressIndicator</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a8197cbb3456a81fbdb0d4cf501e85518"/>bool <emphasis role="strong">mShowDemoWindow</emphasis> = false</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a5fc071f761e157f98066cf1ca9f3b2de"/>std::priority_queue&lt; <link linkend="_classpepr3d_1_1_dialog">pepr3d::Dialog</link> &gt; <emphasis role="strong">mDialogQueue</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a350c54b92a68ddf70b7332eeecdee4b7"/>ToolsVector <emphasis role="strong">mTools</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1abd3f6abd8bd685f463606ddc6ce07c59"/>ToolsVector::iterator <emphasis role="strong">mCurrentToolIterator</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ad9b98e4e97ef223e56901a7adf438006"/>std::shared_ptr&lt; <link linkend="_classpepr3d_1_1_geometry">Geometry</link> &gt; <emphasis role="strong">mGeometry</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a5be480a3d12e8f757179949d7b9c4c3c"/>std::shared_ptr&lt; <link linkend="_classpepr3d_1_1_geometry">Geometry</link> &gt; <emphasis role="strong">mGeometryInProgress</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ad64561adc639db4aa6b8435a42b0d18e"/>std::unique_ptr&lt; <link linkend="_classpepr3d_1_1_command_manager">CommandManager</link>&lt; <link linkend="_classpepr3d_1_1_geometry">Geometry</link> &gt; &gt; <emphasis role="strong">mCommandManager</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a86fa5e0f7cd52754e0b2d1cf0a15db35"/>std::string <emphasis role="strong">mGeometryFileName</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1ac7cd61ba12de9b969d87c63388fb2c2a"/>bool <emphasis role="strong">mShouldSaveAs</emphasis> = true</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1aa071bb750bf3e9208764d64f6ab3cfed"/>std::size_t <emphasis role="strong">mLastVersionSaved</emphasis> = std::numeric_limits&lt;std::size_t&gt;::max()</para>
</listitem>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a2b9d7b9f1eda86cbaf509fd2be5bc5ab"/>bool <emphasis role="strong">mIsGeometryDirty</emphasis> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpepr3d_1_1_main_application_1a1171d4775a0e1cf5d00dd4995eff2262"/>::ThreadPool <emphasis role="strong">sThreadPool</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The main Cinder-based application, represents a window, handles events, thread pool, active tools, geometry, etc. </para>
<para>
The documentation for this class was generated from the following files:</para>
D:/Home/MFF/1-Mgr/projekt/pepr3d/src/ui/MainApplication.hD:/Home/MFF/1-Mgr/projekt/pepr3d/src/ui/MainApplication.cpp</section>
</section>
